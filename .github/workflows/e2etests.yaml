name: (E2E Tests) Meshery Adapter for Linkerd Tests

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
    paths-ignore:
      - 'docs/**'   
  pull_request:
     branches:
       - "*"
  release:
    types: [published]
jobs:
  SetPatternfileForServicemeshInstall:
    runs-on: ubuntu-latest
    outputs:
      sm_version: ${{ steps.glrt.outputs.release }}
      adapter_version:  ${{ env.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
      - name: Get version of adapter
        run: |
            if [ ${{ github.event_name }} == "release" ];then
                echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            else 
                echo "version=edge" >> $GITHUB_ENV
            fi      
      - name: Get latest release tag
        id: gettag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: linkerd/linkerd2
          excludes: prerelease, draft, edge 
      - name: Change service mesh version in patternfile
        run: | 
           yq e -i '.services.linkerd.version="${{ steps.gettag.outputs.release }}"' ./.github/install/deploy.yaml 
           cat ./.github/install/deploy.yaml
      - name: Uploading file
        uses: actions/upload-artifact@v3
        with:
          name: patternfile
          path: ./.github/install/deploy.yaml 

  TestLinkerdForServicemeshInstall:
    needs: SetPatternfileForServicemeshInstall
    uses: meshery/meshery/.github/workflows/test_adapters.yaml@master
    with:
      expected_resources: linkerd-destination,linkerd-identity,linkerd-proxy-injector
      expected_resources_types: pod,pod,pod
      expected_resources_namespaces: linkerd-system,linkerd-system,linkerd-system
      deployment_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-linkerd-deployment.yaml
      service_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-linkerd-service.yaml
      adapter_name: linkerd
      patternfile_name: deploy.yaml
      provider: Local
      k8s_version: v1.22.15
      sm_version: ${{ needs.SetPatternfileForServicemeshInstall.outputs.sm_version }}
      adapter_version:  ${{ needs.SetPatternfileForServicemeshInstall.outputs.adapter_version }}
      output_filename: data.json
    secrets:
      token: ${{ secrets.PROVIDER_TOKEN }} 


  UpdateDocsForServicemeshInstall:
    needs: TestLinkerdForServicemeshInstall
    if:  "always() && github.event_name != 'pull_request' "
    runs-on: ubuntu-latest
    steps:
      - name: Skip if needed
        run: |
            echo "this is it ${{ needs.SkipIfNeeded.outputs.skipdocupdate }} "
            if [ "${{github.event_name }}" == "push" ];then
              echo "version=edge" >> $GITHUB_ENV
            fi
            if [ "${{github.event_name }}" == "release" ];then
              echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            fi
      - uses: actions/checkout@master
        with:
          repository: meshery/meshery 
          token: ${{ secrets.GH_ACCESS_TOKEN }}   
      - name: DownloadJSON
        uses: actions/download-artifact@v3
        with:
          name: data.json
      - name: echo results
        run: |
          pretty=$(jq . data.json)
          rm data.json
          mkdir -p ./docs/_compatibility/meshery-linkerd
          cd ./docs/_compatibility/meshery-linkerd
          touch data.json
          echo $pretty > data.json
          cat data.json
          touch test.md
          filename=(`date +%m-%d-%Y-%H-%M-%m_${SHORT_SHA}`)
          echo $filename
          echo "---
          timestamp: $(jq '.metadata.runon| strptime("%a %b %e %X %Z %Y") | strftime("%Y-%m-%d %X %Z %a")' data.json)
          meshery-component: meshery-linkerd
          meshery-component-version: $version
          meshery-server-version: $(jq '.metadata."meshery-server-version"' data.json)
          k8s-distro: minikube
          k8s-version: $(jq '.metadata.k8s_version' data.json)
          service-mesh: linkerd
          service-mesh-version: $(jq '.metadata.service_mesh_version' data.json)
          tests:
            pod/linkerd-destination: $(jq '.resources_status."pod/linkerd-destination"' data.json)
            pod/linkerd-identity: $(jq '.resources_status."pod/linkerd-identity"' data.json)
            pod/linkerd-proxy-injector:  $(jq '.resources_status."pod/linkerd-proxy-injector"' data.json)
          overall-status: $(jq '."overall-status"' data.json)
          ---" >  test.md
          mv test.md $filename.md
          rm data.json
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: docs
          commit_user_name: l5io
          commit_user_email: ci@layer5.io
          commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          commit_options: '--signoff'
          commit_message: '[Docs] Test status of adapter'

  SetPatternfileForServicemeshAndSampleApp:
    runs-on: ubuntu-latest
    outputs:
      sm_version: ${{ steps.gettag.outputs.release }}
      adapter_version:  ${{ env.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Get version of adapter
        run: |
            if [ ${{ github.event_name }} == "release" ];then
                echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            else 
                echo "version=edge" >> $GITHUB_ENV
            fi
      - name: Get latest release tag
        id: gettag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: linkerd/linkerd2
          excludes: prerelease, draft, edge 
      - name: Change service mesh version in patternfile
        run: | 
            yq e -i '.services.linkerdinstallation.settings.linkerdVersion="${{ steps.gettag.outputs.release }}"' ./.github/install/deployWithSampleApp.yaml 
            cat ./.github/install/deployWithSampleApp.yaml
      - name: Uploading file
        uses: actions/upload-artifact@v2
        with:
          name: patternfile
          path: ./.github/install/deployWithSampleApp.yaml 

  TestLinkerdForServicemeshAndSampleApp:
    needs: SetPatternfileForServicemeshAndSampleApp
    uses: meshery/meshery/.github/workflows/test_adapters.yaml@master
    with:
      expected_resources: emoji,voting,web,vote-bot
      expected_resources_types: pod,pod,pod,pod
      expected_resources_namespaces: emojivoto,emojivoto,emojivoto,emojivoto
      deployment_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-linkerd-deployment.yaml
      service_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-linkerd-service.yaml
      adapter_name: linkerd
      patternfile_name: deployWithSampleApp.yaml
      provider: Local
      k8s_version: v1.20.1
      sm_version: ${{ needs.SetPatternfileForServicemeshAndSampleApp.outputs.sm_version }}
      adapter_version:  ${{ needs.SetPatternfileForServicemeshAndSampleApp.outputs.adapter_version }}
      output_filename: data.json
    secrets:
      token: ${{ secrets.PROVIDER_TOKEN }} 

  UpdateDocsForServicemeshAndSampleApp:
    needs: [TestLinkerdForServicemeshAndSampleApp, UpdateDocsForServicemeshInstall]
    if:  "always() && github.event_name != 'pull_request' "
    runs-on: ubuntu-latest
    steps:
      - name: Skip if needed
        run: |
            echo "this is it ${{ needs.SkipIfNeeded.outputs.skipdocupdate }} "
            if [ "${{github.event_name }}" == "push" ];then
              echo "version=edge" >> $GITHUB_ENV
            fi
            if [ "${{github.event_name }}" == "release" ];then
              echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            fi
      - uses: actions/checkout@master
        with:
          repository: meshery/meshery 
          token: ${{ secrets.GH_ACCESS_TOKEN }}   
      - name: DownloadJSON
        uses: actions/download-artifact@v2
        with:
          name: data.json
      - name: Add commit SHORT_SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: echo results
        run: |
          pretty=$(jq . data.json)
          rm data.json
          cd ./docs/_compatibility/meshery-linkerd
          touch data.json
          echo $pretty > data.json
          cat data.json
          touch test.md
          filename=(`date +%m-%d-%Y-%H-%M-%m_${SHORT_SHA}`)
          echo $filename
          echo "---
          timestamp: $(jq '.metadata.runon| strptime("%a %b %e %X %Z %Y") | strftime("%Y-%m-%d %X %Z %a")' data.json)
          meshery-component: meshery-linkerd
          meshery-component-version: $version
          meshery-server-version: $(jq '.metadata."meshery-server-version"' data.json)
          k8s-distro: minikube
          k8s-version: $(jq '.metadata.k8s_version' data.json)
          service-mesh: linkerd
          service-mesh-version: $(jq '.metadata.service_mesh_version' data.json)
          tests:
            pod/emoji: $(jq '.resources_status."pod/emoji"' data.json)
            pod/voting: $(jq '.resources_status."pod/voting"' data.json)
            pod/web: $(jq '.resources_status."pod/web"' data.json)
            pod/vote-bot: $(jq '.resources_status."pod/vote-bot"' data.json)
          overall-status: $(jq '."overall-status"' data.json)
          ---" >  test.md
          mv test.md $filename.md
          rm data.json
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: docs
          commit_user_name: l5io
          commit_user_email: ci@layer5.io
          commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          commit_options: '--signoff'
          commit_message: '[Docs] Test status of adapter'
